pipeline {
    agent any

    environment {
        PYTHON_IMG_NAME = "python-app:${BUILD_NUMBER}"
        NGINX_IMG_NAME = "nginx-static:${BUILD_NUMBER}"
        SNYK_TOKEN = credentials('snyk-token') // Ensure you have a Jenkins credential with ID 'snyk-token'
    }

    stages {
        stage('Build Docker Images') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
                    script {
                        // Docker login
                        def dockerLogin = sh(script: "docker login -u $USERNAME --password-stdin", returnStdout: true).trim()
                        dockerLogin.with {
                            if (it == 'Login Succeeded') {
                                // Build and push Python app image
                                sh '''
                                    docker build -t "$PYTHON_IMG_NAME" -f Dockerfile.python .
                                    docker tag "$PYTHON_IMG_NAME" etcsys/"$PYTHON_IMG_NAME"
                                    docker push etcsys/"$PYTHON_IMG_NAME"
                                '''
                                // Build and push Nginx image similarly
                                sh '''
                                    docker build -t "$NGINX_IMG_NAME" -f Dockerfile.nginx .
                                    docker tag "$NGINX_IMG_NAME" etcsys/"$NGINX_IMG_NAME"
                                    docker push etcsys/"$NGINX_IMG_NAME"
                                '''
                            } else {
                                error "Docker login failed: $it"
                            }
                        }
                    }
                }
            }
        }

        // Other stages (Install Dependencies, Linting, Unit Tests, Snyk Scans, Deploy Containers) go here
    }

    post {
        always {
            script {
                // Cleanup steps go here
            }
        }
    }
}
