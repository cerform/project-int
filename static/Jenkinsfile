pipeline {
    agent {
        docker {
            image 'python:3.8-slim'
        }
    }
    environment {
        PIP_CACHE_DIR = "${env.WORKSPACE}/.pip_cache"
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'etcsys_test', url: 'https://github.com/cerform/project-int.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'pip install --cache-dir $PIP_CACHE_DIR -r requirements.txt'
            }
        }
        stage('Lint') {
            steps {
                sh 'pip install pylint'  // Ensure Pylint is installed
                sh 'pylint $(find . -name "*.py")'  // Run Pylint on all Python files
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    def app = docker.build("project-int:${env.BUILD_ID}")
                }
            }
        }
        stage('Test') {
            steps {
                sh 'pytest'
            }
        }
        stage('Deploy') {
            steps {
                script {
                    docker.image("project-int:${env.BUILD_ID}").run('-d -p 80:80')
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
